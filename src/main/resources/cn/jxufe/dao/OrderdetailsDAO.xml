<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jxufe.dao.OrderdetailsDAO">
  <resultMap id="BaseResultMap" type="cn.jxufe.entity.Orderdetails">
    <id column="orderDetailsId" jdbcType="VARCHAR" property="orderdetailsid" />
    <result column="orderId" jdbcType="INTEGER" property="orderid" />
    <result column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    orderDetailsId, orderId, goodsId, goodsName, price, amount, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_OrderDetails
    where orderDetailsId = #{orderdetailsid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from T_OrderDetails
    where orderDetailsId = #{orderdetailsid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.jxufe.entity.Orderdetails">
    insert into T_OrderDetails (orderDetailsId, orderId, goodsId, 
      goodsName, price, amount, 
      createTime)
    values (#{orderdetailsid,jdbcType=VARCHAR}, #{orderid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, 
      #{goodsname,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{amount,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.jxufe.entity.Orderdetails">
    insert into T_OrderDetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderdetailsid != null">
        orderDetailsId,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderdetailsid != null">
        #{orderdetailsid,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jxufe.entity.Orderdetails">
    update T_OrderDetails
    <set>
      <if test="orderid != null">
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where orderDetailsId = #{orderdetailsid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jxufe.entity.Orderdetails">
    update T_OrderDetails
    set orderId = #{orderid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      goodsName = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where orderDetailsId = #{orderdetailsid,jdbcType=VARCHAR}
  </update>
</mapper>